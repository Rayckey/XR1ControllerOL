// Generated by gencpp from file xr1controllerol/AnimationOverwrite.msg
// DO NOT EDIT!


#ifndef XR1CONTROLLEROL_MESSAGE_ANIMATIONOVERWRITE_H
#define XR1CONTROLLEROL_MESSAGE_ANIMATIONOVERWRITE_H

#include <ros/service_traits.h>


#include <xr1controllerol/AnimationOverwriteRequest.h>
#include <xr1controllerol/AnimationOverwriteResponse.h>


namespace xr1controllerol
{

struct AnimationOverwrite
{

typedef AnimationOverwriteRequest Request;
typedef AnimationOverwriteResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AnimationOverwrite
} // namespace xr1controllerol


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::xr1controllerol::AnimationOverwrite > {
  static const char* value()
  {
    return "7243db66331b06264c2b466bb4f193aa";
  }

  static const char* value(const ::xr1controllerol::AnimationOverwrite&) { return value(); }
};

template<>
struct DataType< ::xr1controllerol::AnimationOverwrite > {
  static const char* value()
  {
    return "xr1controllerol/AnimationOverwrite";
  }

  static const char* value(const ::xr1controllerol::AnimationOverwrite&) { return value(); }
};


// service_traits::MD5Sum< ::xr1controllerol::AnimationOverwriteRequest> should match 
// service_traits::MD5Sum< ::xr1controllerol::AnimationOverwrite > 
template<>
struct MD5Sum< ::xr1controllerol::AnimationOverwriteRequest>
{
  static const char* value()
  {
    return MD5Sum< ::xr1controllerol::AnimationOverwrite >::value();
  }
  static const char* value(const ::xr1controllerol::AnimationOverwriteRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::xr1controllerol::AnimationOverwriteRequest> should match 
// service_traits::DataType< ::xr1controllerol::AnimationOverwrite > 
template<>
struct DataType< ::xr1controllerol::AnimationOverwriteRequest>
{
  static const char* value()
  {
    return DataType< ::xr1controllerol::AnimationOverwrite >::value();
  }
  static const char* value(const ::xr1controllerol::AnimationOverwriteRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::xr1controllerol::AnimationOverwriteResponse> should match 
// service_traits::MD5Sum< ::xr1controllerol::AnimationOverwrite > 
template<>
struct MD5Sum< ::xr1controllerol::AnimationOverwriteResponse>
{
  static const char* value()
  {
    return MD5Sum< ::xr1controllerol::AnimationOverwrite >::value();
  }
  static const char* value(const ::xr1controllerol::AnimationOverwriteResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::xr1controllerol::AnimationOverwriteResponse> should match 
// service_traits::DataType< ::xr1controllerol::AnimationOverwrite > 
template<>
struct DataType< ::xr1controllerol::AnimationOverwriteResponse>
{
  static const char* value()
  {
    return DataType< ::xr1controllerol::AnimationOverwrite >::value();
  }
  static const char* value(const ::xr1controllerol::AnimationOverwriteResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // XR1CONTROLLEROL_MESSAGE_ANIMATIONOVERWRITE_H
